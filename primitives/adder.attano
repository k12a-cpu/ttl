primitive Adder[4] (in0: bits[4],
                    in1: bits[4],
                    out: bits[4],
                    carry_in: bit,
                    carry_out: bit) {
    device "74283";
    footprint "DIP16";
    pin 1  => out[1];
    pin 2  => in1[1];
    pin 3  => in0[1];
    pin 4  => out[0];
    pin 5  => in0[0];
    pin 6  => in1[0];
    pin 7  => carry_in;
    pin 8  => 1'h0;  # ground
    pin 9  => carry_out;
    pin 10 => out[3];
    pin 11 => in1[3];
    pin 12 => in0[3];
    pin 13 => out[2];
    pin 14 => in0[2];
    pin 15 => in1[2];
    pin 16 => 1'h1;  # vcc
}

composite Adder[8] (in0: bits[8],
                    in1: bits[8],
                    out: bits[8],
                    carry_in: bit,
                    carry_out: bit) {
    node intermediate_carry: bit;
    create lower4: Adder[4] (
        in0 => in0[3:0],
        in1 => in1[3:0],
        out => out[3:0],
        carry_in => carry_in,
        carry_out => intermediate_carry,
    );
    create upper4: Adder[4] (
        in0 => in0[7:4],
        in1 => in1[7:4],
        out => out[7:4],
        carry_in => intermediate_carry,
        carry_out => carry_out,
    );
}

composite Adder[16] (in0: bits[16],
                     in1: bits[16],
                     out: bits[16],
                     carry_in: bit,
                     carry_out: bit) {
    node intermediate_carry: bit;
    create lower8: Adder[8] (
        in0 => in0[7:0],
        in1 => in1[7:0],
        out => out[7:0],
        carry_in => carry_in,
        carry_out => intermediate_carry,
    );
    create upper8: Adder[8] (
        in0 => in0[15:8],
        in1 => in1[15:8],
        out => out[15:8],
        carry_in => intermediate_carry,
        carry_out => carry_out,
    );
}
